# -*- python -*-

# Documentation about naming measure points
# https://seldlx0294.corpusers.net:2443/wiki/touch/tap_response_breakdown

# Sampler-plot input file touch3.smpl should be created as follows given SAMPLER, XTOOLS, and [ -f final.smpl ]:
# Use "-r Time-now  Time_now_daemon" instead of "-r touch_2  Time_now_daemon" if needed
#
# This .spc file is ready to accept data generated by
# "xtools/tvist_related/sampler_merger.sh" which means the following
# command:
#
# $ $SAMPLER/scripts/tests/sampler_merger.py -[ -f tvist.smpl -n movie -r "Time-now" "Time_now" -r "TSince-last" "TSince_last" -] -[ -f final.smpl -n sampler -r "Time-now" "Time_now_sampler" -r "TSince-last" "TSince_last_sampler" $("$XTOOLS"/tvist_related/interpolate_str .) -] -[ -f touchtap.log -n app -r "Time-now" "Time_now_tap" -r "TSince-last" "TSince_last_tap" $("$XTOOLS"/tvist_related/interpolate_str .) -]
#
# Alternatively one can use input data with "Time_now_daemon"
# column. In this came use "--time-daemon" extra parameter for
# "sampler-plot". The "Time_now_daemon" column can be produced in two ways:
#
# 1. as a copy of "Time_now_sampler". This is functionally equivalent
#    to using "xtools/tvist_related/sampler_merger.sh" script
#
# 2. as a copy of "touch_2". This should produce more correct data on time-axis. However there is
# command copies "Time_now_sampler".
#
#
# The following command produces "Time_now_daemon" column based on
# "Time_now_sampler":
#
# $ $SAMPLER/scripts/tests/sampler_merger.py -[ -f tvist.smpl -n movie -r "Time-now" "Time_now" -r "TSince-last" "TSince_last" -] -[ -f final.smpl -n sampler $($XTOOLS/tvist_related/interpolate_str .) -r "Time-now" "Time_now_sampler" -r "TSince-last" "TSince_last_sampler" -D touch_0 -D touch_1 -D touch_2 -D touch_3 -D touch_4 -] -[ -f final.smpl -n sampler-touch $($XTOOLS/tvist_related/interpolate_str .) --delete-all -r Time-now  Time_now_daemon -C Time_now_daemon -k touch_0 -k touch_1 -k touch_2 -k touch_3 -k touch_4 -] -[ -f touchtap.log -n app -r "Time-now" "Time_now_tap" -r "TSince-last" "TSince_last_tap" $("$XTOOLS"/tvist_related/interpolate_str .) -]
#
# TODO: There is a bug somewhere in sampler-plot so that when using
# "touch_2" as "Time_now_daemon" one need to move "Time_now_daemon"
# definition between touch1 and touch3 in this .spc file
#

import optparse
import sampler_plot

class Touch3(sampler_plot.SpcModule):
    def on_parser(self, parser):
        group = optparse.OptionGroup(parser, "SPC specific: touch3.spc")
        group.add_option("--time-daemon",
                         action="store_true",
                         default=False,
                         dest="time_daemon",
                         help="Expect and use Time_now_daemon column")
        group.add_option("--aep",
                         action="store_true",
                         default=False,
                         dest="aep",
                         help="Expect and use ARM Energy probe data")
        parser.add_option_group(group)
    def on_options(self, options):
        if not options.time_daemon:
            # Use Time_now_sampler instead of Time_now_daemon
            for _, _, s in self.iterate_signals(None):
                if s['time'] == 'Time_now_daemon':
                    s['time'] = 'Time_now_sampler'
                if s['id'] == 'Time_now_daemon':
                    s['expectable'] = False
        if options.aep:
            for _, _, s in self.iterate_signals(None):
                if s['id'] in ['Time_now_aep', 'VBAT', 'IBAT', 'PBAT']:
                    s['expectable'] = True

sampler_plot.register_module(Touch3())

def setup_dev_input_used():
    Time_now_daemon[-5:5]
    return True

{'extra_feedgnuplot': '--ylabel="khz" --y2label="%" --ymin=0 --ymax=3200 --y2min=-10 --y2max=90 --extracmds "set format x \\"%.4f\\"" --extracmds "set mouse format \\"%.4f\\"" --extracmds "set xtics font \\"arial,8\\""',
 'period': 100000,
 'signals': [{'exportable': False,
              'id': 'Time_now',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'time': 'Time_now',
              'visible': False},
             {'exportable': False,
              'id': 'TSince_last',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'time': 'Time_now',
              'visible': False},
             {'expectable': False,
              'exportable': False,
              'id': 'group_tvist',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'time': 'Time_now',
              'visible': False},
             {'exportable': False,
              'id': 'tvist_frame',
              'name': 'frame',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: x % 100',
              'style': 'with linespoints',
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'exportable': False,
              'id': 'tvist_y',
              'name': 'Z-coord, screen_contact (right)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'with linespoints lc rgb "#B20000"',
              'subsignal': 1,
              'time': 'Time_now',
              'y': 2},
             {'exportable': False,
              'id': 'tvist_tap',
              'name': 'tap',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'with linespoints',
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'exportable': False,
              'id': 'tvist_avg_low',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'with linespoints',
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'exportable': False,
              'id': 'tvist_avg_high',
              'name': 'avg_high',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'with linespoints',
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'id': 'group_tvist_virtual',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'time': 'Time_now',
              'visible': False},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: (dt[0] / (tvist_frame[0] - tvist_frame[-1])) * 1000 if t[0] > 0 else 0',
              'id': 'tvist_dt',
              'name': 'dt, ms (right)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'with linespoints',
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: (T[0] if tvist_tap[0] > tvist_tap[-1] else screen_contact_time[-1]) if t[0] > 0 else 0',
              'id': 'screen_contact_time',
              'name': 'screen contact',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: interpolate if t[0] > 0 and screen_contact_time[-1] == screen_contact_time[0] else screen_contact_time[0]',
              'style': 'with steps',
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': True,
              'expr': 'lambda x: tvist_y[0] if t[0] > 0 and tvist_tap[0] > tvist_tap[-1] else None',
              'id': 'screen_contact_mark',
              'name': '',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'with points pt 6 ps 3 lc rgb "#B20000"',
              'subsignal': 1,
              'time': 'Time_now',
              'y': 2},
             {'expectable': False,
              'exportable': True,
              'expr': 'lambda x: (tvist_y[0], str(int(tvist_frame[0]))) if t[0] > 0 and tvist_tap[0] > tvist_tap[-1] else (interpolate, interpolate)',
              'id': 'screen_contact_label',
              'name': ' ',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'using ($1):($2):3 with labels right offset -1,0',
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: (T[0] if t[0] > 0 and tvist_avg_high[0] > tvist_avg_high[-1] else end_refresh_time[-1]) if t[0] > 0 else 0',
              'id': 'end_refresh_time_abs',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: interpolate if t[0] > 0 and end_refresh_time_abs[-1] == end_refresh_time_abs[0] else end_refresh_time_abs[0]',
              'style': 'with steps',
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: end_refresh_time_abs[0]',
              'id': 'end_refresh_time',
              'name': 'end refresh, ms (right)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: end_refresh_time[0] and screen_contact_time[0] and 1000 * max(end_refresh_time[0] - screen_contact_time[0],0)',
              'style': 'with steps lc rgb "#c000c0"',
              'subsignal': 1,
              'time': 'Time_now',
              'y': 2},
             {'expectable': False,
              'exportable': True,
              'expr': 'lambda x: tvist_y[0] if t[0] > 0 and tvist_avg_high[0] > tvist_avg_high[-1] else None',
              'id': 'end_refresh_mark',
              'name': '',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'with points pt 6 ps 3 lc rgb "#c000c0"',
              'subsignal': 1,
              'time': 'Time_now',
              'y': 2},
             {'expectable': False,
              'exportable': True,
              'expr': 'lambda x: (tvist_y[0], str(int(tvist_frame[0]))) if t[0] > 0 and tvist_avg_high[0] > tvist_avg_high[-1] else (interpolate, interpolate)',
              'id': 'end_refresh_label',
              'name': ' ',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'using ($1):($2):3 with labels center offset 1,-0.9',
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: (T[0] if t[0] > 0 and tvist_avg_low[0] > tvist_avg_low[-1] else begin_refresh_time[-1]) if t[0] > 0 else 0',
              'id': 'begin_refresh_time',
              'name': 'begin refresh, ms (right)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: begin_refresh_time[0] and screen_contact_time[0] and 1000 * max(begin_refresh_time[0] - screen_contact_time[0],0)',
              'style': 'with steps lc rgb "#00c0c0"',
              'subsignal': 1,
              'time': 'Time_now',
              'y': 2},
             {'expectable': False,
              'exportable': True,
              'expr': 'lambda x: tvist_y[0] if t[0] > 0 and tvist_avg_low[0] > tvist_avg_low[-1] else None',
              'id': 'begin_refresh_mark',
              'name': '',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'with points pt 6 ps 3 lc rgb "#00c0c0"',
              'subsignal': 1,
              'time': 'Time_now',
              'y': 2},
             {'expectable': False,
              'exportable': True,
              'expr': 'lambda x: (tvist_y[0], str(int(tvist_frame[0]))) if t[0] > 0 and tvist_avg_low[0] > tvist_avg_low[-1] else (interpolate, interpolate)',
              'id': 'begin_refresh_label',
              'name': ' ',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'using ($1):($2):3 with labels center offset -1,0.8',
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'id': 'group_sampler',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'time': 'Time_now_sampler',
              'visible': False},
             {'exportable': False,
              'id': 'Time_now_sampler',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_sampler',
              'visible': False},
             {'exportable': False,
              'id': 'TSince_last_sampler',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_sampler',
              'visible': False},
             {'exportable': True,
              'fdata': '/sys/devices/system/cpu/cpu0/cpufreq/scaling_cur_freq',
              'id': 'CPU_frq_0',
              'name': 'CPU0 freq, MHz (left)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: x / 1000',
              'subsignal': 1,
              'time': 'Time_now_sampler'},
             {'exportable': True,
              'fdata': '/sys/devices/system/cpu/cpu1/cpufreq/scaling_cur_freq',
              'id': 'CPU_frq_1',
              'name': 'CPU1 freq, MHz (left)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: x / 1000',
              'subsignal': 1,
              'time': 'Time_now_sampler'},
             {'exportable': True,
              'fdata': '/sys/devices/system/cpu/cpu2/cpufreq/scaling_cur_freq',
              'id': 'CPU_frq_2',
              'name': 'CPU2 freq, MHz (left)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: x / 1000',
              'subsignal': 1,
              'time': 'Time_now_sampler'},
             {'exportable': True,
              'fdata': '/sys/devices/system/cpu/cpu3/cpufreq/scaling_cur_freq',
              'id': 'CPU_frq_3',
              'name': 'CPU3 freq, MHz (left)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: x / 1000',
              'subsignal': 1,
              'time': 'Time_now_sampler'},
             {'exportable': False,
              'id': 'Time_now_daemon',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'exportable': False,
              'id': 'touch_0',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_daemon',
              'visible': False,
              'y': 2},
             {'exportable': False,
              'id': 'touch_1',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_daemon',
              'visible': False,
              'y': 2},
             {'exportable': False,
              'id': 'touch_2',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_daemon',
              'visible': False,
              'y': 2},
             {'exportable': False,
              'id': 'touch_3',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_daemon',
              'visible': False,
              'y': 2},
             {'exportable': False,
              'id': 'touch_4',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_daemon',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'id': 'group_touchtap',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'time': 'Time_now_tap',
              'visible': False},
             {'exportable': False,
              'id': 'Time_now_tap',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_tap',
              'visible': False},
             {'exportable': False,
              'id': 'TSince_last_tap',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_tap',
              'visible': False},
             {'exportable': False,
              'id': 'event',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'style': 'with steps',
              'subsignal': 1,
              'time': 'Time_now_tap',
              'y': 2,
              'visible': False},
             {'exportable': False,
              'id': 'tap_event_id',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_tap',
              'visible': False,
              'y': 2},
             {'exportable': False,
              'id': 'tap_ts',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_tap',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'id': 'group_virtual',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'time': 'Time_now',
              'visible': False},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: setup_dev_input_used() and ([1 for tap in event.zip([tap_event_id], index_min=-5, index_max=10) if tap == (1, touch_0[0])]+[None])[0]',
              'id': 'dev_input_used',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_daemon',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: T[0] - (tap_ts[0] - tap_event_id[0]) if event[0] == 4.0 else vsync_time[-1] if t[0] > 0 else 0',
              'id': 'vsync_time',
              'name': 'vsync',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: vsync_time[0] and screen_contact_time[0] and (1000 * max(vsync_time[0] - screen_contact_time[0],0) if begin_refresh_time[0] < screen_contact_time[0] else 0)',
              'style': 'with steps',
              'subsignal': 1,
              'time': 'Time_now_tap',
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: (T[0] if event[0] == 3.0 else app_begin_draw_time[-1]) if t[0] > 0 else 0',
              'id': 'app_begin_draw_time',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_tap',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: (T[0] if event[0] == 2.0 else app_end_draw_time[-1]) if t[0] > 0 else 0',
              'id': 'app_end_draw_time',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_tap',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: T[0] if event[0] == 1.0 else 0 if t[0] == 0 else app_touch_time[-1]',
              'id': 'app_touch_time',
              'name': 'app touch',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: app_touch_time[0] and screen_contact_time[0] and 1000 * max(app_touch_time[0] - screen_contact_time[0],0)',
              'style': 'with steps',
              'subsignal': 1,
              'time': 'Time_now_tap',
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: (app_begin_draw_time[0] if app_begin_draw_time[-1] < app_touch_time[0] and app_touch_time[0] <= app_begin_draw_time[0] else app_begin_first_draw_time[-1]) if t[0] > 0 else 0',
              'id': 'app_begin_first_draw_time',
              'name': 'app begin first draw, ms (right)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: app_begin_first_draw_time[0] and screen_contact_time[0] and 1000 * max(app_begin_first_draw_time[0] - screen_contact_time[0],0)',
              'style': 'with steps',
              'subsignal': 1,
              'time': 'Time_now_tap',
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: (app_end_draw_time[0] if app_end_draw_time[-1] < app_begin_first_draw_time[0] and app_begin_first_draw_time[0] <= app_end_draw_time[0] else app_end_first_draw_time[-1]) if t[0] > 0 else 0',
              'id': 'app_end_first_draw_time',
              'name': 'app end first draw, ms (right)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: app_end_first_draw_time[0] and screen_contact_time[0] and 1000 * max(app_end_first_draw_time[0] - screen_contact_time[0],0)',
              'style': 'with steps',
              'subsignal': 1,
              'time': 'Time_now_tap',
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: T[0] if dev_input_used[0] else 0 if t[0] == 0 else daemon_input_time[-1]',
              'id': 'daemon_input_time',
              'name': 'daemon input',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: daemon_input_time[0] and screen_contact_time[0] and 1000 * max(daemon_input_time[0] - screen_contact_time[0],0)',
              'style': 'with steps',
              'subsignal': 1,
              'time': 'Time_now_daemon',
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: T[0] - (touch_4[0] - touch_3[0]) if dev_input_used[0] else 0 if t[0] == 0 else dev_input_time[-1]',
              'id': 'dev_input_time',
              'name': 'dev input',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: dev_input_time[0] and screen_contact_time[0] and 1000 * max(dev_input_time[0] - screen_contact_time[0],0)',
              'style': 'with steps',
              'subsignal': 1,
              'time': 'Time_now_daemon',
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: (vsync_time[0] if vsync_first_time[-1] < app_end_first_draw_time[0] else vsync_first_time[-1]) if t[0] > 0 else 0',
              'id': 'vsync_first_time',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_tap',
              'visible': False},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: (vsync_time[0] if begin_refresh_time[0] < vsync_first_time[0] else vsync_last_time[-1]) if t[0] > 0 else 0',
              'id': 'vsync_last_time',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_tap',
              'visible': False},
             {'expectable': False,
              'exportable': False,
              'expr': 'lambda x: 1',
              'id': 'csv',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: interpolate if t[0] > 0 and end_refresh_time_abs[-1] == end_refresh_time_abs[0] else "\t".join(["%.6f" % v for v in [screen_contact_time[0], dev_input_time[0], daemon_input_time[0], app_touch_time[0], app_begin_first_draw_time[0], app_end_first_draw_time[0], vsync_first_time[0], vsync_last_time[0], begin_refresh_time[0]]]) if end_refresh_time_abs[0] != None else None',
              'style': 'with steps',
              'subsignal': 1,
              'time': 'Time_now',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'id': 'Time_now_aep',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'subsignal': 1,
              'time': 'Time_now_aep',
              'visible': False,
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'fdata': '/dev/zero_',
              'id': 'VBAT',
              'name': '(EXT) vBat , V/10 (right)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: x * 10',
              'style': 'with linespoints lt 2 lw 1 pt 2 ps 0  lc rgb "#DC143C"',
              'time': 'Time_now_aep',
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'fdata': '/dev/zero_',
              'id': 'IBAT',
              'name': '(EXT)  iBat, mA*10 (right)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: x / 10',
              'style': 'with linespoints lt 2 lw 1 pt 7 ps 0 lc rgb "#000000"',
              'time': 'Time_now_aep',
              'y': 2},
             {'expectable': False,
              'exportable': False,
              'fdata': '/dev/zero_',
              'id': 'PBAT',
              'name': '(EXT)  pBat, mW*100 (right)',
              'nosig': 'NO_SIG',
              'nuce': 3,
              'scale': 'lambda x: x / 100',
              'style': 'with linespoints lt 2 lw 1 pt 2 ps 0.2  lc rgb "#B22222"',
              'time': 'Time_now_aep',
              'y': 2}],
 'sigs_file': '/data/local/tmp/touch.ini',
 'time_columns': False,
 'version': 2,
 'y_shift': 10}
